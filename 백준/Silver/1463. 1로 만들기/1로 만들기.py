# 1로 만들기

"""
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.

정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
"""

import sys
n = int(sys.stdin.readline())

# DP 테이블 초기화 (인덱스를 1부터 사용하기 위해 n+1 크기로 생성)
d = [0] * (n + 1)

# 2부터 n까지 반복하며 DP 테이블을 채움
for i in range(2, n + 1):
    # 1. 1을 빼는 경우
    d[i] = d[i - 1] + 1

    # 2. 2로 나누어 떨어지는 경우
    # 기존 값(1을 뺀 경우)과 2로 나눈 경우 중 더 작은 값으로 갱신
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)

    # 3. 3으로 나누어 떨어지는 경우
    # 기존 값과 3으로 나눈 경우 중 더 작은 값으로 갱신
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)

print(d[n])